S ::= Program EOF
Program ::= DefList StatementList
DefList ::= Def DefList 
DefList ::= ''
Def ::= DEF ID LPAREN TypedVarList RPAREN Return COLON NEWLINE Block
TypedVar ::= ID COLON Type
Type ::= INT
Type ::= STR
Type ::= LBRACKET Type RBRACKET
TypedVarList ::= ''
TypedVarList ::= TypedVar TypedVarListTail
TypedVarListTail ::= COMMA TypedVar TypedVarListTail
TypedVarListTail ::= ''
Return ::= ''
Return ::= ARROW Type
Block ::= INDENT Statement StatementList DEDENT
StatementList ::= Statement StatementList
StatementList ::= ''
Statement ::= SimpleStatement NEWLINE
Statement ::= IF Expr COLON NEWLINE Block ElifList Else
Statement ::= WHILE Expr COLON NEWLINE Block
Statement ::= FOR ID IN Expr COLON NEWLINE Block
ElifList ::= Elif ElifList
ElifList ::= ''
Elif ::= ELIF Expr COLON NEWLINE Block
Else ::= ''
Else ::= ELSE COLON NEWLINE Block
SimpleStatement ::= Expr SSTail
SSTail ::= ''
SSTail ::= = Expr
SimpleStatement ::= PASS
SimpleStatement ::= RETURN ReturnExpr
ReturnExpr ::= Expr
ReturnExpr ::= ''
Expr ::= orExpr ExprPrime
ExprPrime ::= IF andExpr ELSE andExpr ExprPrime
ExprPrime ::= ''
orExpr ::= andExpr orExprPrime
orExprPrime ::= OR andExpr orExprPrime
orExprPrime ::= ''
andExpr ::= notExpr andExprPrime
andExprPrime ::= AND notExpr andExprPrime
andExprPrime ::= ''
notExpr ::= CompExpr notExprPrime
notExprPrime ::= NOT CompExpr notExprPrime
notExprPrime ::= ''
CompExpr ::= IntExpr CompExprPrime
CompExprPrime ::= CompOp IntExpr CompExprPrime
CompExprPrime ::= ''
IntExpr ::= Term IntExprPrime
IntExprPrime ::= ADD Term IntExprPrime
IntExprPrime ::= SUB Term IntExprPrime
IntExprPrime ::= ''
Term ::= Factor TermPrime
TermPrime ::= MUL Factor TermPrime 
TermPrime ::= DIV Factor TermPrime 
TermPrime ::= MOD Factor TermPrime 
TermPrime ::= ''
Factor ::= SUB Factor
Factor ::= Name
Factor ::= Literal
Factor ::= List
Factor ::= LPAREN Expr RPAREN
Name ::= ID NameTail
NameTail ::= ''
NameTail ::= LPAREN ExprList RPAREN
NameTail ::= List
Literal ::= NONE
Literal ::= TRUE
Literal ::= FALSE
Literal ::= INTEGER
Literal ::= STRING
List ::= LBRACKET ExprList RBRACKET
ExprList ::= ''
ExprList ::= Expr ExprListTail
ExprListTail ::= ''
ExprListTail ::= COMMA Expr ExprListTail
CompOp ::= EQ 
CompOp ::= DIF 
CompOp ::= LESS 
CompOp ::= GRTR 
CompOp ::= LESSEQ 
CompOp ::= GRTREQ 
CompOp ::= IS
