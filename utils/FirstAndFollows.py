from utils.ReservedWords import *
FIRST = {
    'S': ['EOF','DEF','IF','WHILE','FOR','PASS','RETURN','SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'Program': ['DEF','IF','WHILE','FOR','PASS','RETURN','SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'DefList': ['DEF'],
    'Def': ['DEF'],
    'TypedVar': ['ID'],
    'Type': ['INT','STR','LBRACKET'],
    'TypedVarList': ['ID'],
    'TypedVarListTail': ['COMMA'],
    'Return': ['ARROW'],
    'Block': ['INDENT'],
    'StatementList': ['IF','WHILE','FOR','PASS','RETURN','SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'Statement': ['IF','WHILE','FOR','PASS','RETURN','SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'ElifList': ['ELIF'],
    'Elif': ['ELIF'],
    'Else': ['ELSE'],
    'SimpleStatement': ['PASS','RETURN','SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'SSTail': ['ASSIGN'],
    'ReturnExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'Expr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'ExprPrime': ['IF'],
    'orExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'orExprPrime': ['OR'],
    'andExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'andExprPrime': ['AND'],
    'notExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'notExprPrime': ['NOT'],
    'CompExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'CompExprPrime': ['EQ','DIF','LESS','GRTR','LESSEQ','GRTREQ','IS'],
    'IntExpr': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'IntExprPrime': ['ADD','SUB'],
    'Term': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'TermPrime': ['MUL','DIV','MOD'],
    'Factor': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'Name': ['ID'],
    'NameTail': ['LPAREN','LBRACKET'],
    'Literal': ['NONE','TRUE','FALSE','INTEGER','STRING'],
    'List': ['LBRACKET'],
    'ExprList': ['SUB','LPAREN','ID','NONE','TRUE','FALSE','INTEGER','STRING','LBRACKET'],
    'ExprListTail': ['COMMA'],
    'CompOp': ['EQ','DIF','LESS','GRTR','LESSEQ','GRTREQ','IS']
}
FOLLOW = {
    "S": ["EOF"],
    "Program": ["EOF"],
    "DefList": ["IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "EOF"],
    "Def": ["IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "DEF", "EOF"],
    "TypedVar": ["RPAREN", "COMMA"],
    "Type": ["RBRACKET", "COLON", "RPAREN", "COMMA"],
    "TypedVarList": ["RPAREN"],
    "TypedVarListTail": ["RPAREN"],
    "Return": ["COLON"],
    "Block": ["IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "DEF", "DEDENT", "ELSE", "ELIF", "EOF"],
    "StatementList": ["DEDENT", "EOF"],
    "Statement": ["DEDENT", "IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "EOF"],
    "ElifList": ["DEDENT", "IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "ELSE", "EOF"],
    "Elif": ["DEDENT", "IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "ELSE", "ELIF", "EOF"],
    "Else": ["DEDENT", "IF", "WHILE", "FOR", "PASS", "RETURN", "SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET", "EOF"],
    "SimpleStatement": ["NEWLINE"],
    "SSTail": ["NEWLINE"],
    "ReturnExpr": ["NEWLINE"],
    "Expr": ["COLON", "NEWLINE", "ASSIGN", "RPAREN", "RBRACKET", "COMMA"],
    "ExprPrime": ["COLON", "NEWLINE", "ASSIGN", "RPAREN", "RBRACKET", "COMMA"],
    "OrExpr": ["COLON", "NEWLINE", "ASSIGN", "IF", "RPAREN", "RBRACKET", "COMMA"],
    "OrExprPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "RPAREN", "RBRACKET", "COMMA"],
    "AndExpr": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "RPAREN", "RBRACKET", "COMMA"],
    "AndExprPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "RPAREN", "RBRACKET", "COMMA"],
    "NotExpr": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "RPAREN", "RBRACKET", "COMMA"],
    "NotExprPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "RPAREN", "RBRACKET", "COMMA"],
    "CompExpr": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "RPAREN", "RBRACKET", "COMMA"],
    "CompExprPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "RPAREN", "RBRACKET", "COMMA"],
    "IntExpr": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "RPAREN", "RBRACKET", "COMMA"],
    "IntExprPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "RPAREN", "RBRACKET", "COMMA"],
    "Term": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "RPAREN", "RBRACKET", "COMMA"],
    "TermPrime": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "RPAREN", "RBRACKET", "COMMA"],
    "Factor": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "MUL", "DIV", "MOD", "RPAREN", "RBRACKET", "COMMA"],
    "Name": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "MUL", "DIV", "MOD", "RPAREN", "RBRACKET", "COMMA"],
    "NameTail": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "MUL", "DIV", "MOD", "RPAREN", "RBRACKET", "COMMA"],
    "Literal": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "MUL", "DIV", "MOD", "RPAREN", "RBRACKET", "COMMA"],
    "List": ["COLON", "NEWLINE", "ASSIGN", "IF", "ELSE", "OR", "AND", "NOT", "EQ", "DIF", "LESS", "GRTR", "LESSEQ", "GRTREQ", "IS", "ADD", "SUB", "MUL", "DIV", "MOD", "RPAREN", "RBRACKET", "COMMA"],
    "ExprList": ["RPAREN", "RBRACKET"],
    "ExprListTail": ["RPAREN", "RBRACKET"],
    "CompOp": ["SUB", "LPAREN", "ID", "NONE", "TRUE", "FALSE", "INTEGER", "STRING", "LBRACKET"]
}
nullable_dict = {
    'S': False,
    'Program': True,
    'DefList': True,
    'Def': False,
    'TypedVar': False,
    'Type': False,
    'TypedVarList': True,
    'TypedVarListTail': True,
    'Return': True,
    'Block': False,
    'StatementList': True,
    'Statement': False,
    'ElifList': True,
    'Elif': False,
    'Else': True,
    'SimpleStatement': False,
    'SSTail': True,
    'ReturnExpr': True,
    'Expr': False,
    'ExprPrime': True,
    'orExpr': False,
    'orExprPrime': True,
    'andExpr': False,
    'andExprPrime': True,
    'notExpr': False,
    'notExprPrime': True,
    'CompExpr': False,
    'CompExprPrime': True,
    'IntExpr': False,
    'IntExprPrime': True,
    'Term': False,
    'TermPrime': True,
    'Factor': False,
    'Name': False,
    'NameTail': True,
    'Literal': False,
    'List': False,
    'ExprList': True,
    'ExprListTail': True,
    'CompOp': False,
}
for i in KEYWORDS: FIRST[i]=[i]
for i in OPER_DELIMITERS:
    FIRST[OPER_DELIMITERS[i]]=[OPER_DELIMITERS[i]]
for i in OPER_DELIMITERS_2:
    FIRST[OPER_DELIMITERS_2[i]]=[OPER_DELIMITERS_2[i]]

OPERS = [ ["MUL", "DIV", "MOD"],
         ["ADD","SUB"],
         FIRST['CompOp'],
         ["NOT"],
         ["AND"],
         ["OR"]]
LEVELS = {}
for i, c in enumerate(OPERS):
    for j in c:
        LEVELS[j] = i
